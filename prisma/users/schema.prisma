// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../prismaclients/users"
  }

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_USERS_URL")
  directUrl      = env("SUPABASE_USERS_DIRECTURL")
}

model User{
  id String @id
  careers Career[]
  darkMode Boolean @default(false)
  autAdvance Boolean @default(true)
  autAdvanceData Json @default("{\"secOfficer\": \"250\",\"firOfficer\": \"1000\",\"cpt\": \"1500\",\"srCaptain\": \"4000\"}")
}

model Career{
  id String @id @default(uuid())
  base String
  belongsTo User @relation(fields: [userId], references:[id])
  company String
  aircraft String @default("")
  dispatches Dispatch?
  flightHours Float @default(0.0)
  logbook Logbook?
  name String @default("")
  rank Rank @default(PILOTCADET)
  careerType CareerType @default(AIRLINE)
  userId String 
}

enum Rank {
  PILOTCADET
  SECONDOFFICER
  FIRSTOFFICER
  CAPTAIN
  SENIORCAPTAIN
}

enum CareerType {
  AIRLINE
  CARGO
  CORPORATE
}

model Logbook{
  id String @id @default(uuid())
  entries Entry[]
  career Career @relation(fields:[careerId], references:[id], onDelete:Cascade)
  careerId String @unique
}

model Dispatch{
  id String @id @default(uuid())
  data Json?
  career Career @relation(fields:[careerId], references:[id], onDelete: Cascade)
  careerId String @unique
}

model Entry{
  id String @id @default(uuid())
  data Json
  isPartOfLogbook Logbook? @relation(fields:[logbookId], references:[id], onDelete:Cascade)
  logbookId String?
  createdAt DateTime @default(now())
}
